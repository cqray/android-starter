apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        //noinspection OldTargetApi
        targetSdkVersion 30
        versionCode 47
        versionName createVersionName(versionCode)

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 强制限定版本依赖版本
    configurations.all {
        resolutionStrategy {
            force 'androidx.core:core-ktx:1.6.0'
            force 'androidx.core:core:1.6.0'
            force 'androidx.appcompat:appcompat:1.3.1'
            force "androidx.activity:activity:1.3.1"
            force "androidx.fragment:fragment:1.3.1"
        }
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    //noinspection GradleDependency
    api "androidx.appcompat:appcompat:$appcompat_version"
    //noinspection GradleDependency
    api "com.google.android.material:material:$material_version"
    //JetPack Lifecycle、LiveData、ViewModel扩展
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_java8_version"
    // 常用工具类
    api "com.blankj:utilcodex:$utilcodex_version"
    // 加载动画
    api "com.github.ybq:Android-SpinKit:$spinkit_version"
    // 刷新框架
    api "com.scwang.smart:refresh-layout-kernel:$smart_refresh_version"
    // 3.0.4之后版本需要Kotlin，暂不适配Kotlin。
    // noinspection GradleDependency
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:$brvah_version"
    // RxJava
    api "io.reactivex.rxjava3:rxjava:$rxjava_version"
    api "io.reactivex.rxjava3:rxandroid:$rxandroid_version"
    // Json格式化
    api "com.google.code.gson:gson:$gson_version"
    // ButterKnife工具
    compileOnly "com.jakewharton:butterknife:$butterknife_version"
    // Lombok框架
    // noinspection AnnotationProcessorOnCompilePath
    compileOnly "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"
}

/**
 * 生成版本名
 */
static String createVersionName(int code) {
    int num1 = code / 100
    int num2 = (code - num1 * 100) / 10
    int num3 = code - num1 * 100 - num2 * 10
    return num1 + "." + num2 + "." + num3
}